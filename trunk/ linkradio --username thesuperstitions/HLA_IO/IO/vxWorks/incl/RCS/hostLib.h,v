head	6.34;
branch	6.34.0;
access;
symbols;
locks; strict;
comment	@ * @;


6.34
date	2007.10.18.18.28.33;	author ceswbl2;	state Exp;
branches
	6.34.0.1;
next	6.33;

6.33
date	2007.04.23.17.04.24;	author ceswbl2;	state Exp;
branches
	6.33.0.1;
next	6.32;

6.32
date	2006.10.25.17.25.06;	author ceswbl2;	state Exp;
branches
	6.32.0.1;
next	6.31;

6.31
date	2006.04.13.19.15.43;	author ceswbl2;	state Exp;
branches
	6.31.0.1;
next	6.30;

6.30
date	2005.10.11.20.27.03;	author ceswbl2;	state Exp;
branches
	6.30.0.1;
next	6.29;

6.29
date	2004.12.02.19.28.44;	author ceswbl2;	state Exp;
branches
	6.29.0.1;
next	6.28;

6.28
date	2004.06.10.19.26.15;	author ceswbl2;	state Exp;
branches
	6.28.0.1;
next	6.27;

6.27
date	2003.12.16.21.07.24;	author ceswbl2;	state Exp;
branches
	6.27.0.1;
next	6.26;

6.26
date	2003.08.13.20.10.40;	author ceswbl2;	state Exp;
branches
	6.26.0.1;
next	6.25;

6.25
date	2003.07.25.13.34.53;	author ceswbl2;	state Exp;
branches
	6.25.0.1;
next	6.24;

6.24
date	2003.03.03.20.56.01;	author fran;	state Exp;
branches
	6.24.0.1;
next	;

6.24.0.1
date	2003.03.03.20.56.19;	author fran;	state Exp;
branches;
next	;

6.25.0.1
date	2003.07.25.13.35.11;	author ceswbl2;	state Exp;
branches;
next	;

6.26.0.1
date	2003.08.14.19.26.37;	author cwbl2tst;	state Exp;
branches;
next	;

6.27.0.1
date	2003.12.17.17.56.52;	author ceswbl2;	state Exp;
branches;
next	;

6.28.0.1
date	2004.06.11.14.17.57;	author ceswbl2;	state Exp;
branches;
next	;

6.29.0.1
date	2004.12.03.14.35.22;	author ceswbl2;	state Exp;
branches;
next	;

6.30.0.1
date	2005.10.12.16.54.04;	author ceswbl2;	state Exp;
branches;
next	;

6.31.0.1
date	2006.04.14.14.52.45;	author ceswbl2;	state Exp;
branches;
next	;

6.32.0.1
date	2006.10.26.16.06.09;	author ceswbl2;	state Exp;
branches;
next	;

6.33.0.1
date	2007.04.24.16.31.07;	author ceswbl2;	state Exp;
branches;
next	6.33.0.2;

6.33.0.2
date	2007.09.17.17.38.39;	author marc;	state Exp;
branches;
next	6.33.0.3;

6.33.0.3
date	2007.10.04.17.54.00;	author fran;	state Exp;
branches;
next	6.33.0.4;

6.33.0.4
date	2007.10.12.11.42.39;	author tallman;	state Exp;
branches;
next	;

6.34.0.1
date	2007.10.19.14.29.49;	author ceswbl2;	state Exp;
branches;
next	;


desc
@@


6.34
log
@CESWBL2_6_34_OCT_18_07
@
text
@/* hostLib.h - header for hostLib.c */


/*
modification history
--------------------
01k,20aug97,jag  added function declations for hostTblSearchByAddr(),
                 hostTblSearchByName() (SPR #9175)
01j,19may97,spm  added S_hostLib_INVALID_PARAMETER error value
01i,22sep92,rrr  added support for c++
01h,27jul92,elh  Moved hostShow to netShow.
01g,04jul92,jcf  cleaned up.
01f,26may92,rrr  the tree shuffle
01e,04oct91,rrr  passed through the ansification filter
		  -fixed #else and #endif
		  -changed VOID to void
01d,05oct90,shl  added ANSI function prototypes.
                 made #endif ANSI style.
01c,13apr89,shl  added MAXHOSTNAMELEN.
01b,04jun88,gae  changed S_remLib_* to S_hostLib_*.
01a,28may88,dnw  extracted from remLib.h
*/

#ifndef HOST_LIB_H
#define HOST_LIB_H

#include <vxTypes.h>
#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#ifndef MAXHOSTNAMELEN
#define MAXHOSTNAMELEN	256
#endif

/*
 * @@limitation The host name and address are NOT added to the Unix host table,
 * which requires super-user permission. Instead, the hostLib module maintains
 * its own host table, which can be accessed by the <i>hostGetByName</i> and
 * <i>hostGetByAddr</i> routines.
 */
STATUS
hostAdd (
	char *hostName,
	char *hostAddr
);

/*
 * @@limitation The host name and address are NOT deleted to the Unix host table,
 * which requires super-user permission. Instead, the hostLib module maintains
 * its own host table, which can be accessed by the <i>hostGetByName</i> and
 * <i>hostGetByAddr</i> routines.
 */
STATUS 
hostDelete (
	char *name,
	char *addr
);

/*
 * Returns the integer value of the host address, or ERROR.
 * @@limitation This function accesses the host table maintained by this
 * module, NOT the Unix host table (see limitation for <i>hostAdd</i>).
 */
int
hostGetByName (
	char *name
);

/*
 * @@limitation This function accesses the host table maintained by this
 * module, NOT the Unix host table (see limitation for <i>hostAdd</i>).
 */
STATUS
hostGetByAddr (
	int addr,
	char *name
);

/*
 * routine callable from shell
 */
int
hostShow(int ignore);

#ifdef	__cplusplus
}
#endif

#endif
@


6.34.0.1
log
@Making_Branches
@
text
@@


6.33
log
@CESWBL2_6_33_APR_23_07
@
text
@a2 1
/* Copyright 1984-1997 Wind River Systems, Inc. */
a16 1
		  -changed copyright notice
a18 1
                 added copyright notice.
d65 1
a65 2
 * module first (see limitation for <i>hostAdd</i>). If the name isn't
 * found there, it tries calling the Unix gethostbyname().
d82 6
@


6.33.0.1
log
@Making_Branches
@
text
@@


6.33.0.2
log
@Add hostShow routine for displaying host table entries - TR #2657
@
text
@d68 2
a69 1
 * module, NOT the Unix host table (see limitation for <i>hostAdd</i>).
a85 6
/*
 * routine callable from shell
 */
int
hostShow();

@


6.33.0.3
log
@Add an int argument to hostShow like other funcs that are passed into the
shell_cmnd call in vxWorks.cc. Needed for strict compiler.
TR#2669
@
text
@d89 1
a89 1
hostShow(int ignore);
@


6.33.0.4
log
@Removed notices.  IAW TR#2677
@
text
@d3 1
d18 1
d21 1
@


6.32
log
@CESWBL2_6_32_OCT_25_06
@
text
@@


6.32.0.1
log
@Making_Branches
@
text
@@


6.31
log
@CESWBL2_6_31_APR_14_06
@
text
@@


6.31.0.1
log
@Making_Branches
@
text
@@


6.30
log
@CESWBL2_6_30_OCT_12_05
@
text
@@


6.30.0.1
log
@Making_Branches
@
text
@@


6.29
log
@CESWBL2_6_29_DEC_03_04
@
text
@@


6.29.0.1
log
@Making_Branches
@
text
@@


6.28
log
@CESWBL2_6_28_JUN_11_04
@
text
@@


6.28.0.1
log
@Making_Branches
@
text
@@


6.27
log
@CESWBL2_6_27_DEC_17_03
@
text
@@


6.27.0.1
log
@Making_Branches
@
text
@@


6.26
log
@CESWBL2_6_26_AUG_13_03
@
text
@@


6.26.0.1
log
@Making_Branches
@
text
@@


6.25
log
@Correcting_RCS_Rev
@
text
@@


6.25.0.1
log
@Making_Branches
@
text
@@


6.24
log
@initial wasp rev
@
text
@@


6.24.0.1
log
@initial wasp rev
@
text
@@
