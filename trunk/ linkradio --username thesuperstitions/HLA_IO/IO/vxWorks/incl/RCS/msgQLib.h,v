head	6.34;
branch	6.34.0;
access;
symbols;
locks; strict;
comment	@ * @;


6.34
date	2007.10.18.18.28.33;	author ceswbl2;	state Exp;
branches
	6.34.0.1;
next	6.33;

6.33
date	2007.04.23.17.04.24;	author ceswbl2;	state Exp;
branches
	6.33.0.1;
next	6.32;

6.32
date	2006.10.25.17.25.06;	author ceswbl2;	state Exp;
branches
	6.32.0.1;
next	6.31;

6.31
date	2006.04.13.19.15.43;	author ceswbl2;	state Exp;
branches
	6.31.0.1;
next	6.30;

6.30
date	2005.10.11.20.27.03;	author ceswbl2;	state Exp;
branches
	6.30.0.1;
next	6.29;

6.29
date	2004.12.02.19.28.44;	author ceswbl2;	state Exp;
branches
	6.29.0.1;
next	6.28;

6.28
date	2004.06.10.19.26.15;	author ceswbl2;	state Exp;
branches
	6.28.0.1;
next	6.27;

6.27
date	2003.12.16.21.07.24;	author ceswbl2;	state Exp;
branches
	6.27.0.1;
next	6.26;

6.26
date	2003.08.13.20.10.40;	author ceswbl2;	state Exp;
branches
	6.26.0.1;
next	6.25;

6.25
date	2003.07.25.13.34.53;	author ceswbl2;	state Exp;
branches
	6.25.0.1;
next	6.24;

6.24
date	2003.03.03.20.56.01;	author fran;	state Exp;
branches
	6.24.0.1;
next	;

6.24.0.1
date	2003.03.03.20.56.19;	author fran;	state Exp;
branches;
next	;

6.25.0.1
date	2003.07.25.13.35.11;	author ceswbl2;	state Exp;
branches;
next	;

6.26.0.1
date	2003.08.14.19.26.37;	author cwbl2tst;	state Exp;
branches;
next	;

6.27.0.1
date	2003.12.17.17.56.52;	author ceswbl2;	state Exp;
branches;
next	;

6.28.0.1
date	2004.06.11.14.17.57;	author ceswbl2;	state Exp;
branches;
next	;

6.29.0.1
date	2004.12.03.14.35.22;	author ceswbl2;	state Exp;
branches;
next	;

6.30.0.1
date	2005.10.12.16.54.04;	author ceswbl2;	state Exp;
branches;
next	;

6.31.0.1
date	2006.04.14.14.52.45;	author ceswbl2;	state Exp;
branches;
next	;

6.32.0.1
date	2006.10.26.16.06.09;	author ceswbl2;	state Exp;
branches;
next	;

6.33.0.1
date	2007.04.24.16.31.07;	author ceswbl2;	state Exp;
branches;
next	6.33.0.2;

6.33.0.2
date	2007.10.12.11.42.40;	author tallman;	state Exp;
branches;
next	;

6.34.0.1
date	2007.10.19.14.29.49;	author ceswbl2;	state Exp;
branches;
next	;


desc
@@


6.34
log
@CESWBL2_6_34_OCT_18_07
@
text
@/* msgQLib.h - message queue library header file */


/*
modification history
--------------------
02l,17apr98,rlp  canceled MSG_Q_INFO modification for backward compatibility.
02k,04nov97,rlp  modified MSG_Q_INFO structure for tracking messages sent.
02j,13jul93,wmd  use MEM_ROUND_UP to determine MSG_NODE_SIZE.
02i,22sep92,rrr  added support for c++
02h,04jul92,jcf  cleaned up.
01g,26may92,rrr  the tree shuffle
01f,04oct91,rrr  passed through the ansification filter
01e,05oct90,dnw  changed MSG_Q_INFO structure.
01d,05oct90,dnw  changed function declarations for new interface.
01c,05oct90,shl  added ANSI function prototypes.
                 made #endif ANSI style.
01b,07aug90,shl  moved function declarations to end of file.
01a,10may90,dnw  written
*/

#ifndef MSGQ_LIB_H
#define MSGQ_LIB_H

#include <vxWorks.h>
#include <pthread.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define M_msgQLib	(65 << 16)

#define S_msgQLib_INVALID_MSG_LENGTH	(M_msgQLib | 1)

typedef void *MSG_Q_ID;

#ifndef IPC_NOWAIT
#define IPC_NOWAIT 0004000
#endif

/* message queue options */

#define MSG_Q_TYPE_MASK 0x01    /* mask for pend queue type in options */
#define MSG_Q_FIFO      0x00    /* tasks wait in FIFO order */
#define MSG_Q_PRIORITY  0x01    /* tasks wait in PRIORITY order */

/* message send priorities */

#define MSG_PRI_NORMAL  0       /* normal priority message */
#define MSG_PRI_URGENT  1       /* urgent priority message */

typedef struct                  /* MSG_Q_INFO */
{
    int     numMsgs;            /* OUT: number of messages queued */
    int     numTasks;           /* OUT: number of tasks waiting on msg q */

    int     sendTimeouts;       /* OUT: count of send timeouts */
    int     recvTimeouts;       /* OUT: count of receive timeouts */

    int     options;            /* OUT: options with which msg q was created */
    int     maxMsgs;            /* OUT: max messages that can be queued */
    int     maxMsgLength;       /* OUT: max byte length of each message */

    int     taskIdListMax;      /* IN: max tasks to fill in taskIdList */
    int *   taskIdList;         /* PTR: array of task ids waiting on msg q */

    int     msgListMax;         /* IN: max msgs to fill in msg lists */
    char ** msgPtrList;         /* PTR: array of msg ptrs queued to msg q */
    int *   msgLenList;         /* PTR: array of lengths of msgs */
    
    unsigned int overflows;	/* OUT: count of sends to full queue */
    unsigned int hiwat;		/* OUT: largest number of msgs ever in queue */

} MSG_Q_INFO;


/*
 * @@limitation In this POSIX implementation, the <i>options</i>
 * argument is ignored, as message queueing/dequeueing is always
 * performed in priority order.
 */
MSG_Q_ID
msgQCreate (
	int maxMsgs,
	int maxMsgLength,
	int options
);

STATUS
msgQDelete (
	MSG_Q_ID msgQId
);

/*
 * @@limitation When timeout is specified as NO_WAIT, the POSIX implementation
 * temporarily changes the queue's attributes to nonblocking (as is also the
 * case for msgQReceive). To avoid a potential conflict with the receiver, one
 * should not use NO_WAIT for msgQSend, but only for msgQReceive.
 */
STATUS
msgQSend (
	MSG_Q_ID msgQId,
	char *buffer,
	UINT nBytes,
	int timeout,
	int priority
);

int
msgQReceive (
	MSG_Q_ID msgQId,
	char *buffer,
	UINT maxNBytes,
	int timeout
);

/*
 * @@limitation Only the numMsgs, maxMsgs and maxMsgLength fields are filled
 * in with useful information in the structure pointed to by pInfo. The
 * options field is always set to MSG_Q_PRIORITY (see msgQCreate);
 */
STATUS  
msgQInfoGet (
	MSG_Q_ID msgQId,
	MSG_Q_INFO *pInfo
);

int
msgQNumMsgs (
	MSG_Q_ID msgQId
);

void	
msgQShowInit (
	void
);

STATUS
msgQShow (
	MSG_Q_ID	msgQid,
	int		level
);

#ifdef	__cplusplus
}
#endif

#endif
@


6.34.0.1
log
@Making_Branches
@
text
@@


6.33
log
@CESWBL2_6_33_APR_23_07
@
text
@a2 1
/* Copyright 1984-1992 Wind River Systems, Inc. */
a13 1
		  -changed copyright notice
a17 1
                 added copyright notice.
@


6.33.0.1
log
@Making_Branches
@
text
@@


6.33.0.2
log
@Removed notices.  IAW TR#2677
@
text
@d3 1
d15 1
d20 1
@


6.32
log
@CESWBL2_6_32_OCT_25_06
@
text
@@


6.32.0.1
log
@Making_Branches
@
text
@@


6.31
log
@CESWBL2_6_31_APR_14_06
@
text
@@


6.31.0.1
log
@Making_Branches
@
text
@@


6.30
log
@CESWBL2_6_30_OCT_12_05
@
text
@@


6.30.0.1
log
@Making_Branches
@
text
@@


6.29
log
@CESWBL2_6_29_DEC_03_04
@
text
@@


6.29.0.1
log
@Making_Branches
@
text
@@


6.28
log
@CESWBL2_6_28_JUN_11_04
@
text
@@


6.28.0.1
log
@Making_Branches
@
text
@@


6.27
log
@CESWBL2_6_27_DEC_17_03
@
text
@@


6.27.0.1
log
@Making_Branches
@
text
@@


6.26
log
@CESWBL2_6_26_AUG_13_03
@
text
@@


6.26.0.1
log
@Making_Branches
@
text
@@


6.25
log
@Correcting_RCS_Rev
@
text
@@


6.25.0.1
log
@Making_Branches
@
text
@@


6.24
log
@initial wasp rev
@
text
@@


6.24.0.1
log
@initial wasp rev
@
text
@@
